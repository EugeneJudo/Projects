//Problem: Identify the number of unique integers in the set generated by all
//possible results of a^b for x1 <= a <= x2 & y1 <= b <= y2.

import java.util.ArrayList;

public class powers {

    public static int duplicates = 0;
    public static int pos = 0;

    public static void main(String[] args) {

        int[] amount;
        ArrayList<Integer> dups = new ArrayList<>();
        
        int x1 = 2; 
        int x2 = 100;
        int y1 = 2; 
        int y2 = 100;
        
        for(int x = x1; x <= x2; x++) //generates all numbers which will produce duplicates
            if(Math.pow(x, 2) <= y2)
                dups.add(x);


        for(int x = 0; x < dups.size(); x++)
        {
            int y;
            
            for(y = 2; Math.pow(dups.get(x), y) <= x2; y++)
            {
                final int test = (int)Math.pow(dups.get(x),y);
                dups.removeIf(p -> p.equals(test)); //since 2 and 4 could both be in the list, removing 4 is important to prevent overcounting
                    
            }
            
            amount = new int[1000];
            
            for(int z = 1; z <= y-1; z++)
                calc(amount, z, y1, y2);
            pos = 0;
        }


        System.out.println((y2-y1+1)*(x2-x1+1) - duplicates); //subtracting the amount of duplicates from total possible configurations

    }

    public static int[] calc(int[] n, int val, int y1, int y2) 
    {        
        for (int x = y1; x <= y2; x++) {
            if (!contains(n, x * val)) {
                n[pos++] = x * val;
            }
            else
                duplicates++;
        }
        return n;
    }

    public static boolean contains(int[] n, int val) {
        for (int x : n)
            if (x == val)
                return true;
        return false;
    }

}
